
==================== FINAL INTERFACE ====================
2016-08-24 17:41:00.9404916 UTC

interface main@main:Day2 7103
  interface hash: 323ea5582dbcd5c3d2380c27a75c41f7
  ABI hash: c28bca1e56e30ed01220327ef04575b2
  export-list hash: 096a4d973150fb13cc26e796db2341fa
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 19f14af9765166beee28e4f0433efd00
  sig of: Nothing
  used TH splices: False
  where
exports:
  Day2.solution1
  Day2.solution2
module dependencies: Day2PuzzleInput
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0 binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      raw-strings-qq-1.1@rawst_ID3MFclqMyK0MbTfvUn0Nf
                      template-haskell-2.10.0.0 text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:GHC.Base a4939789b2cfd60b36ed163e56a623cd
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type 906b37a40029a8b67c803fa4b303a827
import  -/  Day2PuzzleInput 71a75cb2893842e8bac819cbfbe04cf0
  exports: bf780891257ef56a3a9871af579d928f
  input 15974d90b63b2312d780bd95597a50f9
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Char 7396f62b889b69ef612242e6e328a501
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Combinator 177fa3f15566bdfd3ee9dfbae4a8270f
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Error 63e8f1b81e63d76097df26ebf1d2ab6f
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Prim 9e7b729de19916839e0537418ad49023
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.String ad7d595fbcbe94bebe243cc974f981a4
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.ParserCombinators.Parsec 979f7d9534fa46e0bd4704f6ae351173
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.ParserCombinators.Parsec.Prim 143147dc1158d69f261e746cacaee788
894f12353bdfdc3f9092505b2e900b80
  $fShowBox :: GHC.Show.Show Day2.Box
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Day2.Box
                  Day2.$fShowBox_$cshowsPrec
                  Day2.$fShowBox_$cshow
                  Day2.$fShowBox_$cshowList -}
894f12353bdfdc3f9092505b2e900b80
  $fShowBox1 :: Day2.Box -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w1 :: Day2.Box w2 :: GHC.Base.String ->
                 case w1 of ww { Day2.Box ww1 ww2 ww3 ->
                 Day2.$w$cshowsPrec 0 ww1 ww2 ww3 w2 }) -}
0c4a52fbae79f277c558275e11d88e03
  $fShowBox2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
2560600f264bc2c186424396f765e6bc
  $fShowBox3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "h = "#) -}
7129d02bf6920aeb3836352f40890c3b
  $fShowBox4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "w = "#) -}
e17492ede4f9663c40f2cdecccc6a289
  $fShowBox5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
9d300928e0ad27eed9877fa5a434eff7
  $fShowBox6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "l = "#) -}
d04dfe820bd87ce48f15b2950786aa0c
  $fShowBox7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Box {"#) -}
894f12353bdfdc3f9092505b2e900b80
  $fShowBox_$cshow :: Day2.Box -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Day2.Box ->
                 Day2.$fShowBox_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
894f12353bdfdc3f9092505b2e900b80
  $fShowBox_$cshowList :: [Day2.Box] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Day2.Box Day2.$fShowBox1) -}
894f12353bdfdc3f9092505b2e900b80
  $fShowBox_$cshowsPrec ::
    GHC.Types.Int -> Day2.Box -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U(U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w1 :: GHC.Types.Int w2 :: Day2.Box w3 :: GHC.Base.String ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Day2.Box ww3 ww4 ww5 ->
                 Day2.$w$cshowsPrec ww1 ww3 ww4 ww5 w3 } }) -}
bbd9424104db2bd4df8e073b6079dfa9
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Integer.Type.Integer
                   ww2 :: GHC.Integer.Type.Integer
                   ww3 :: GHC.Integer.Type.Integer
                   w1 :: GHC.Base.String ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ x :: GHC.Base.String[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Day2.$fShowBox7
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Day2.$fShowBox6
                          (case GHC.Show.$w$cshowsPrec1
                                  0
                                  ww1
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     Day2.$fShowBox5
                                     (GHC.Base.++
                                        @ GHC.Types.Char
                                        Day2.$fShowBox4
                                        (case GHC.Show.$w$cshowsPrec1
                                                0
                                                ww2
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   Day2.$fShowBox5
                                                   (GHC.Base.++
                                                      @ GHC.Types.Char
                                                      Day2.$fShowBox3
                                                      (case GHC.Show.$w$cshowsPrec1
                                                              0
                                                              ww3
                                                              (GHC.Base.++
                                                                 @ GHC.Types.Char
                                                                 Day2.$fShowBox2
                                                                 x) of ww4 { (#,#) ww5 ww6 ->
                                                       GHC.Types.:
                                                         @ GHC.Types.Char
                                                         ww5
                                                         ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                                         GHC.Types.:
                                           @ GHC.Types.Char
                                           ww5
                                           ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False -> p w1
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w1)) }) -}
894f12353bdfdc3f9092505b2e900b80
  data Box
    = Box {l :: GHC.Integer.Type.Integer,
           w :: GHC.Integer.Type.Integer,
           h :: GHC.Integer.Type.Integer}
005d5f9d6991557a427f9cedb3693223
  type ElvesList = [Day2.Box]
984cc69ec9897dbf5258cb2ae660b498
  h :: Day2.Box -> GHC.Integer.Type.Integer
  RecSel Day2.Box
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Day2.Box ->
                 case ds of wild { Day2.Box ds1 ds2 ds3 -> ds3 }) -}
53227c2aa210bfdd8aa76547fad5425a
  l :: Day2.Box -> GHC.Integer.Type.Integer
  RecSel Day2.Box
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Day2.Box ->
                 case ds of wild { Day2.Box ds1 ds2 ds3 -> ds1 }) -}
47f839b474d8631066dd6ddb1926b8f5
  puzzleInput :: [Day2.Box]
  {- Unfolding: (case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ ()
                         @ Data.Functor.Identity.Identity
                         @ [Day2.Box]
                         @ GHC.Types.Char
                         (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                         Day2.solution5
                           `cast`
                         (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                                   <GHC.Base.String>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <[Day2.Box]>_R))
                         GHC.Tuple.()
                         (GHC.Types.[] @ GHC.Types.Char)
                         Day2PuzzleInput.input)
                        `cast`
                      (Data.Functor.Identity.NTCo:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError [Day2.Box]>_R) of wild {
                   Data.Either.Left r -> GHC.Types.[] @ Day2.Box
                   Data.Either.Right r -> r }) -}
a1277ed37b17a43c1a3618067a4dec16
  solution1 :: GHC.Integer.Type.Integer
  {- Unfolding: (Day2.solution1_go
                   Day2.puzzleInput
                   Day2.solution4) -}
6cdf81174d58d9e415e9bb53a9a06119
  solution10 ::
    [GHC.Types.Char]
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Day2.Box
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Day2.Box
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
cab616a241095b1906d54fbf2399f826
  solution11 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   eta :: Text.Parsec.Prim.State GHC.Base.String ()
                   eta1 :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta3 :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   Day2.solution13
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   Day2.solution12
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
a814ad5c9a43e1124130ab7f2f9aae71
  solution12 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Text.Parsec.Char.digit2
                   (GHC.Types.[] @ GHC.Base.String)) -}
9ade28901c7be3ded7ea186218981da0
  solution13 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   w2 :: Text.Parsec.Prim.State GHC.Base.String ()[OneShot]
                   w3 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w5 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w6 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot] ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wa
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isDigit
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
5d5362fc88471db4062a5b320c8b0c83
  solution1_go ::
    [Day2.Box] -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
76d4fef8e99d86df4798f974fb462b42
  solution1_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "end of line"#) -}
d777743feaed8fdcc1ae873bddf1bc91
  solution2 :: GHC.Integer.Type.Integer
  {- Unfolding: (Day2.solution2_go
                   Day2.puzzleInput
                   Day2.solution4) -}
909cb5f38a5374d33b616a867700f327
  solution2_go ::
    [Day2.Box] -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
c0bc89993ebf868e25a6a6a0c356b53e
  solution4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
3bb25a6e3157e9a03cd06ec13d04b234
  solution5 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([Day2.Box]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([Day2.Box]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   w3 :: Text.Parsec.Prim.State GHC.Base.String ()[OneShot]
                   w4 :: [Day2.Box]
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w6 :: [Day2.Box]
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot] ->
                 Text.Parsec.Combinator.$wa11
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Day2.Box
                   @ GHC.Base.String
                   @ GHC.Types.Char
                   Day2.solution9
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Day2.Box>_R))
                   Day2.solution6
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6) -}
28e37d183e70f5b9ed88252d4732817a
  solution6 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   eta :: Text.Parsec.Prim.State GHC.Base.String ()
                   eta1 :: GHC.Base.String
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b[OneShot]
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b[OneShot]
                   eta3 :: GHC.Base.String
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b[OneShot]
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b[OneShot] ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   Day2.solution8
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   Day2.solution7
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
1e92e8cf77316e9fbf1fe3e0117fb400
  solution7 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Day2.solution1_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
008c6201460cd63d2597f3746a7b8eea
  solution8 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,C(C1(C1(U)))><L,C(U)> -}
b770647e18d62c3732241dc1b0b71b10
  solution9 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Day2.Box
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Day2.Box
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (\ @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta1 :: Day2.Box
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1[OneShot]
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1[OneShot]
                   eta3 :: Day2.Box
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1[OneShot]
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1[OneShot] ->
                 Text.Parsec.Combinator.many3
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   Day2.solution11
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b1
                   eta
                   (\ x :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Day2.solution10
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Day2.Box
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    Day2.solution10
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Day2.Box
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
43ea79e6042fa09f0dc9259e0d1a9295
  w :: Day2.Box -> GHC.Integer.Type.Integer
  RecSel Day2.Box
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Day2.Box ->
                 case ds of wild { Day2.Box ds1 ds2 ds3 -> ds2 }) -}
instance GHC.Show.Show [Day2.Box] = Day2.$fShowBox
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

